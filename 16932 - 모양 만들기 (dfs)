package com.core.hello;
import java.util.*;
class Main{
    static int n, m;
    static int[][] arr;
    static int max = 0;
    static boolean[][] visit;
    static int[][] dir = {{-1,0}, {0,1}, {1,0}, {0,-1}};
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        n = scan.nextInt();
        m = scan.nextInt();
        arr = new int[n][m];
        visit = new boolean[n][m];
        for (int i = 0; i < n; i++){
            for (int j = 0; j < m; j++) {
                arr[i][j] = scan.nextInt();
            }
        }
        for(int i = 0; i < n; i++){
            for(int j = 0; j < m; j++){
                visit = new boolean[n][m];
                if(arr[i][j] == 0){
                    arr[i][j] = 1;
                    visit[i][j] = true;
                    max = Math.max(max, dfs(i,j,1));
                }
                arr[i][j] = 0;
            }
        }
        System.out.println(max);
    }
    static int dfs(int x, int y, int sum){
        for(int i = 0; i < 4; i++){
            int nx = x + dir[i][0];
            int ny = y + dir[i][1];
            if(nx < 0 || ny < 0 || nx >= n || ny >= m)
                continue;
            if(visit[nx][ny])
                continue;
            if(arr[nx][ny] == 1){
                visit[nx][ny] = true;
                dfs(nx,ny,sum + 1);
                sum = Math.max(sum, 0);
            }
        }
        return sum;
    }
}
