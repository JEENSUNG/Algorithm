package com.core.hello;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;
class Main{
    static int n,m;
    static int[][] arr;
    static int[][] ans;
    static int[] dx = {-1,0,1,0};
    static int[] dy = {0,1,0,-1};
    static Queue<Node> queue = new LinkedList<>();
    public static void main(String[]args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());
        n = Integer.parseInt(st.nextToken());
        m = Integer.parseInt(st.nextToken());
        arr = new int[n][m];
        ans = new int[n][m];
        for(int i = 0; i < n; i++){
            st = new StringTokenizer(br.readLine());
            for(int j = 0; j < m; j++) {
                arr[i][j] = Integer.parseInt(st.nextToken());
            }
        }

        for(int i = 0; i < n; i++){
            for(int j = 0; j < m; j++){
                if(arr[i][j] == 2) {
                    arr[i][j] = 0;
                    queue.offer(new Node(i, j, 0));
                }
            }
        }
        bfs();
        for(int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if(arr[i][j] == 1)
                    ans[i][j] = -1;
                System.out.print(ans[i][j] + " ");
            }
            System.out.println();
        }
    }
    static void bfs(){
        while(!queue.isEmpty()){
            int size = queue.size();
            for(int i = 0; i < size; i++){
                Node now = queue.poll();
                ans[now.x][now.y] = now.d;
                for(int j = 0; j < 4; j++){
                    int nx = now.x + dx[j];
                    int ny = now.y + dy[j];
                    if(nx < 0 || ny < 0 || nx >= n || ny >= m)
                        continue;
                    if(arr[nx][ny] == 1){
                        arr[nx][ny] = 0;
                        queue.offer(new Node(nx,ny,now.d + 1));
                    }
                }
            }
        }
    }
}
class Node{
    int x;
    int y;
    int d;
    Node(int x, int y, int d){
        this.x = x;
        this.y = y;
        this.d = d;
    }
}
