import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

class Main{
    static int n,num,str;
    static int[] arr;
    static int[] ans;
    static Long max = Long.MIN_VALUE;
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        n = Integer.parseInt(br.readLine());
        num = (n / 2) + 1; str = (n / 2); //num = 5, str = 4
        arr = new int[num];
        ans = new int[str];
        String s = br.readLine();
        arr[0] = s.charAt(0);
        for(int i = 0; i < str; i++){
            char c = s.charAt(i);
            if(c == '+')
                ans[i] = 1;
            else if(c == '*')
                ans[i] = 2;
            else if(c == '-')
                ans[i] = 3;
            arr[i + 1] = s.charAt(i * 2);
        }
        // arr = 3 8 7 9 2 ans = + * - (1 2 3)
        for(int i = 0; i < str; i++){
            dfs(i);
        }
        System.out.println(max);
    }
    static void dfs(int index) {
        int sum = 0;
        if (ans[index] == 1) {
            sum += arr[index] + arr[index + 1];
        } else if (ans[index] == 2) {
            sum += arr[index] * arr[index + 1];
        } else
            sum += arr[index] - arr[index + 1];

        ArrayList<Integer> list = new ArrayList<>();
        ArrayList<Integer> list2 = new ArrayList<>();
        for (int i = 0; i < str; i++) {
            if (i == index) {
                list.add(sum);
                continue;
            }
            list2.add(ans[i]);
            if (i == index + 1)
                continue;
            list.add(arr[i]);
        }
        max = Math.max(max, search(list, list2));
    }
    static int search(ArrayList<Integer> list, ArrayList<Integer> list2) {
        int sum = 0;
        for(int i = 0; i < list2.size(); i++){
            if(list2.get(i) == 1)
                sum += list.get(i) + list.get(i + 1);
            else if(list2.get(i) == 2)
                sum += list.get(i) * list.get(i + 1);
            else if(list2.get(i) == 3)
                sum += list.get(i) - list.get(i + 1);
        }
        return sum;
    }
}
